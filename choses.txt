

//////////////////////////////////

vendredi 22 mars : 

void clickBoule(int ymin, int ymax, int player, int x, float tab[NBP][NBB][COO]) {
    for (int i = 0; i < NBB; i++) {
        if (x > tab[player][i][0]-BOULESRAD-5 && x < tab[player][i][0]+BOULESRAD+5) {
            if (tab[player][i][1] > ymin-BOULESRAD && tab[player][i][1] < ymax-BOULESRAD) {
                tab[player][i][1] = 0;
            } else if ((tab[player][i][1] < ymin-BOULESRAD-15 && tab[player][i][1] > ymin-BOULESRAD-35) || (tab[player][i][1] > ymax-BOULESRAD+15 && tab[player][i][1] < ymax-BOULESRAD+35)) {
                tab[player][i][1] = 0;
                cout<<"error";
            }
        }
    }
}



    // Joueur 1

    if (sf::Keyboard::isKeyPressed(sf::Keyboard::Key::A)) clickBoule(TOP, TOP+2*BOULESRAD+20, 0, COL1, boules);
    if (sf::Keyboard::isKeyPressed(sf::Keyboard::Key::Z)) clickBoule(TOP, TOP+2*BOULESRAD+20, 0, COL2, boules);
    if (sf::Keyboard::isKeyPressed(sf::Keyboard::Key::E)) clickBoule(TOP, TOP+2*BOULESRAD+20, 0, COL3, boules);
    if (sf::Keyboard::isKeyPressed(sf::Keyboard::Key::R)) clickBoule(TOP, TOP+2*BOULESRAD+20, 0, COL4, boules);

    // Joueur 2

    if (sf::Keyboard::isKeyPressed(sf::Keyboard::Key::U)) clickBoule(TOP, TOP+2*BOULESRAD+20, 1, COL1, boules);
    if (sf::Keyboard::isKeyPressed(sf::Keyboard::Key::I)) clickBoule(TOP, TOP+2*BOULESRAD+20, 1, COL2, boules);
    if (sf::Keyboard::isKeyPressed(sf::Keyboard::Key::O)) clickBoule(TOP, TOP+2*BOULESRAD+20, 1, COL3, boules);
    if (sf::Keyboard::isKeyPressed(sf::Keyboard::Key::P)) clickBoule(TOP, TOP+2*BOULESRAD+20, 1, COL4, boules);
    
    
        sf::Vertex quad[] =
    {
        sf::Vertex(sf::Vector2f(COL1-BOULESRAD-10, TOP)),
        sf::Vertex(sf::Vector2f(COL1+BOULESRAD+10, TOP)),
        sf::Vertex(sf::Vector2f(COL1+BOULESRAD+10, TOP+2*BOULESRAD+20)),            // Rectangle 1
        sf::Vertex(sf::Vector2f(COL1-BOULESRAD-10, TOP+2*BOULESRAD+20)),

        sf::Vertex(sf::Vector2f(COL2-BOULESRAD-10, TOP)),
        sf::Vertex(sf::Vector2f(COL2+BOULESRAD+10, TOP)),
        sf::Vertex(sf::Vector2f(COL2+BOULESRAD+10, TOP+2*BOULESRAD+20)),            // Rectangle 2
        sf::Vertex(sf::Vector2f(COL2-BOULESRAD-10, TOP+2*BOULESRAD+20)),

        sf::Vertex(sf::Vector2f(COL3-BOULESRAD-10, TOP)),
        sf::Vertex(sf::Vector2f(COL3+BOULESRAD+10, TOP)),
        sf::Vertex(sf::Vector2f(COL3+BOULESRAD+10, TOP+2*BOULESRAD+20)),            // Rectangle 3
        sf::Vertex(sf::Vector2f(COL3-BOULESRAD-10, TOP+2*BOULESRAD+20)),

        sf::Vertex(sf::Vector2f(COL4-BOULESRAD-10, TOP)),
        sf::Vertex(sf::Vector2f(COL4+BOULESRAD+10, TOP)),
        sf::Vertex(sf::Vector2f(COL4+BOULESRAD+10, TOP+2*BOULESRAD+20)),            // Rectangle 4
        sf::Vertex(sf::Vector2f(COL4-BOULESRAD-10, TOP+2*BOULESRAD+20))
    };


    for (int i = 0; i < 16; i+=2) {
        quad[i].color = sf::Color(0, 0, 0);
    }

    app.draw(quad, 16, sf::Quads);
